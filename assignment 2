import os
import requests
import hashlib
import zipfile

# URLs for the datasets
adult_zip_url = "https://archive.ics.uci.edu/static/public/2/adult.zip"
adult_csv_url = "https://raw.githubusercontent.com/socialfoundations/folktables/main/adult_reconstruction.csv"

# File paths for downloaded data and files
data_dir = "data"
zip_file_path = os.path.join(data_dir, "adult.zip")
csv_file_path = os.path.join(data_dir, "adult_reconstruction.csv")
zip_hash_file = os.path.join(data_dir, "adult_zip_hash.txt")
csv_hash_file = os.path.join(data_dir, "adult_csv_hash.txt")

def download_file(url, save_path):
    try:
        response = requests.get(url, stream=True)
        response.raise_for_status()

        with open(save_path, "wb") as file:
            for chunk in response.iter_content(chunk_size=8192):
                file.write(chunk)
    except requests.exceptions.RequestException as e:
        print(f"Error downloading {url}: {e}")
        exit(1)

def compute_hash(file_path):
    sha256_hash = hashlib.sha256()
    with open(file_path, "rb") as f:
        for byte_block in iter(lambda: f.read(4096), b""):
            sha256_hash.update(byte_block)
    return sha256_hash.hexdigest()

def main():
    os.makedirs(data_dir, exist_ok=True)
    # Download the ZIP file
    if not os.path.isfile(zip_file_path):
        download_file(adult_zip_url, zip_file_path)

    # Verify the ZIP file's integrity
    zip_hash = compute_hash(zip_file_path)
    with open(zip_hash_file, "w") as f:
        f.write(zip_hash)

    # Unzip the file
    with zipfile.ZipFile(zip_file_path, "r") as zip_ref:
        zip_ref.extractall(data_dir)

    # Download the CSV file
    if not os.path.isfile(csv_file_path):
        download_file(adult_csv_url, csv_file_path)

    # Verify the CSV file's integrity
    csv_hash = compute_hash(csv_file_path)
    with open(csv_hash_file, "w") as f:
        f.write(csv_hash)

    print("Data downloaded and verified successfully.")

# To verify the integrity of the files (as demonstrated in Lab 3) you will need to: 
# 01- Manually calculate the SHA-256 for each file you download
# 02-Store the hash
# 03-During the automatic download in Step 2, recalculate the hash and compare it with the stored version.

# 01-original SHA-256 d11fe30213d36434a0879aab7cb00ce3c812eb7ba2495874438abff7b7b762e9 

# 02-Using requests 
import requests
import os
url = 'https://archive.ics.uci.edu/dataset/53/iris.zip'
response = requests.get(url)
if not os.path.exists('data'):
    os.mkdir('data')
with open('data/iris.zip', mode='wb') as f:
    f.write(response.content)
# 03-using hashlib
import hashlib
with open('data/iris.zip', mode='rb') as f:
    data = f.read()
    sha256hash = hashlib.sha256(data).hexdigest()
    print(sha256hash)
uci_iris_sha256 = 'd11fe30213d36434a0879aab7cb00ce3c812eb7ba2495874438abff7b7b762e9'
if uci_iris_sha256 != sha256hash:
    print("Computed hash does not match expected hash")
else:
    print("Computed hash matches expected hash")
